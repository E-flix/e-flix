<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- ============================================
  - 작성자   : 김어진
  - 최초작성 : 2025-06-20
  - 설명     : DepartmentMapper query xml
  [ 변경 이력 ]
  - 2025-06-23 (김어진): 부서 상위부서,하위부서 쿼리문 작성
  - 2025-06-26 (김어진): 부서등록 쿼리문 작성
=============================================== -->
<mapper namespace="com.eflix.hr.mapper.DepartmentMapper">
  <select id="findAllDepts" parameterType="String" resultType="DepartmentDTO">
    SELECT DISTINCT
        dept_idx   AS deptIdx,
        dept_name  AS deptName
    FROM departments
    WHERE dept_up_idx IS NULL AND co_idx = #{coIdx}
    ORDER BY dept_name
  </select>
  
  <select id="findAllDeptsUp" parameterType="String" resultType="DepartmentDTO">
    SELECT DISTINCT
        dept_idx   AS deptIdx,
        dept_name  AS deptName
    FROM departments
    WHERE dept_up_idx = #{deptIdx} AND co_idx = #{coIdx}
    ORDER BY dept_name
  </select>
  
  <!-- 부서 전체조회 -->
  <select id="selectAll" resultType="DepartmentDTO">
    SELECT d1.*, d2.dept_name AS dept_up_name
    FROM departments d1
    LEFT JOIN departments d2 ON d1.dept_up_idx = d2.dept_idx
    WHERE d1.co_idx = #{coIdx}
  </select>

  <!-- 부서등록 -->
  <insert id="insertDept" parameterType="DepartmentDTO">
    <selectKey resultType="String" keyProperty="deptIdx" order="BEFORE">
      SELECT 'dept-' || TO_CHAR(NVL(MAX(TO_NUMBER(SUBSTR(dept_idx, 6))), 100) + 1) FROM departments
    </selectKey>
    INSERT INTO departments
      (dept_idx,
        dept_up_idx,
        dept_name,
        dept_status,
        dept_regdate,
        dept_tel,
        dept_memo,
        co_idx)
    VALUES
      (
        #{deptIdx},
        <choose>
          <when test="deptUpIdx != null and deptUpIdx != ''">
            #{deptUpIdx}
          </when> 
          <otherwise>
            NULL
          </otherwise>
        </choose>,
        #{deptName},
        #{deptStatus},
        SYSDATE,
        #{deptTel},
        #{deptMemo},
        #{coIdx}
      )
  </insert>

  <!-- 0707 -->
  <select id="findUpAllByCoIdx" parameterType="String" resultType="DepartmentDTO">
    SELECT
      dept_idx   AS deptIdx,
      dept_name  AS deptName
    FROM departments
    WHERE dept_up_idx IS NULL AND co_idx = #{coIdx}
    ORDER BY dept_name
  </select>
  <select id="findDownAllByCoIdx" parameterType="String" resultType="DepartmentDTO">
    SELECT
      d1.dept_idx   AS deptIdx,
      d1.dept_name  AS deptName,
      d2.dept_name AS dept_up_name
    FROM departments d1
      LEFT JOIN departments d2 ON d1.dept_up_idx = d2.dept_idx
    WHERE d1.co_idx = #{coIdx} AND d1.dept_up_idx = #{deptUpIdx}
    ORDER BY d1.dept_name
  </select>
</mapper>