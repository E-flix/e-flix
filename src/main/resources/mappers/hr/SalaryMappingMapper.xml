<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- ============================================
  - 작성자   : 김어진
  - 최초작성 : 2025-06-20
  - 설명     : SalaryMappingMapper query xml
  [ 변경 이력 ]
  - 2025-06-19 (김어진): 계정과목 전체조회 작성
  - 2025-06-19 (복성민): 급여 매핑 조회, 추가, 수정, 삭제 추가
=============================================== -->
<mapper namespace="com.eflix.hr.mapper.SalaryMappingMapper">

    <!-- 0712 -->
    <select id="findAllItemCount" parameterType="salaryMappingSearchDTO" resultType="int">
        SELECT COUNT(*)
        FROM salary_mapping
        <where>
            <if test="type != null and type != ''">
                AND type = #{type}
            </if>
            <if test="useStatus != null and useStatus != ''">
                UPPER(use_status) = #{useStatus}
            </if>
            <if test="keyword != null and keyword != '' and keyword != '선택'">
                <choose>
                    <when test="option != null and option != '전체' and option == 'alNumber'">
                        AND al_number = #{alNumber}
                    </when>
                    <when test="option != null and option !='전체' and option == 'alName'">
                        AND al_name = #{alName}
                    </when>
                    <otherwise>
                        AND (
                            al_number LIKE '%' || #{keyword} || '%'
                            OR
                            al_name LIKE '%' || #{keyword} || '%'
                        )
                    </otherwise>
                </choose>
            </if>
            AND co_idx = #{coIdx}
        </where>
    </select>

    <select id="findAllBySearch" parameterType="salaryMappingSearchDTO" resultType="SalaryMappingDTO">
        SELECT *
        FROM (
            SELECT a.*, ROWNUM AS rn
            FROM (
                SELECT sm.mp_idx, sm.al_number, sm.al_name, sm.type, sm.salary_type, sm.al_amount, 
                    UPPER(sm.use_status) AS use_status, sm.target_dept, sm.mp_memo, sm.calc_type, sm.tax_type,
                    d.dept_name AS target_dept_name
                FROM salary_mapping sm
                    LEFT JOIN departments d ON sm.target_dept = d.dept_idx
                <where>
                    <if test="type != null and type != ''">
                        AND type = #{type}
                    </if>
                    <if test="useStatus != null and useStatus != ''">
                        UPPER(use_status) = #{useStatus}
                    </if>
                    <if test="keyword != null and keyword != '' and keyword != '선택'">
                        <choose>
                            <when test="option != null and option != '전체' and option == 'alNumber'">
                                AND al_number = #{alNumber}
                            </when>
                            <when test="option != null and option !='전체' and option == 'alName'">
                                AND al_name = #{alName}
                            </when>
                            <otherwise>
                                AND (
                                    al_number LIKE '%' || #{keyword} || '%'
                                    OR
                                    al_name LIKE '%' || #{keyword} || '%'
                                )
                            </otherwise>
                        </choose>
                    </if>
                    AND sm.co_idx = #{coIdx}
                </where>
                ORDER BY sm.al_number DESC
            ) a
            WHERE ROWNUM &lt; = #{offset} + #{limit}
        )
        WHERE rn &gt; #{offset}
    </select>

    <insert id="insert" parameterType="SalaryMappingDTO">
        <selectKey resultType="String" keyProperty="mpIdx" order="BEFORE">
            SELECT 'mp-' || TO_CHAR(NVL(MAX(TO_NUMBER(SUBSTR(mp_idx, 4))), 100) + 1) FROM salary_mapping
        </selectKey>
        INSERT INTO salary_mapping(mp_idx, al_number, salary_type, al_name, type, co_idx, al_amount, use_status, target_dept, mp_memo, calc_type, tax_type)
        VALUES(#{mpIdx}, #{alNumber}, #{salaryType}, #{alName}, #{type}, #{coIdx}, #{alAmount}, UPPER(#{useStatus}), #{targetDept}, #{mpMemo}, #{calcType}, #{taxType})
    </insert>

    <select id="findByMpIdx" parameterType="String" resultType="SalaryMappingDTO">
        SELECT mp_idx, al_number, salary_type, al_name, type, co_idx, al_amount, use_status, target_dept, calc_type, tax_type, mp_memo
        FROM salary_mapping
        WHERE mp_idx = #{mpIdx}
    </select>

    <update id="update" parameterType="SalaryMappingDTO">
        UPDATE salary_mapping
        <set>
            <if test="alNumber != null and alNumber != ''">
                al_number = #{alNumber},
            </if>
            <if test="salaryType != null and salaryType != ''">
                salary_type = #{salaryType},
            </if>
            <if test="alName != null and alName != ''">
                al_name = #{alName},
            </if>
            <if test="type != null and type != ''">
                type = #{type},
            </if>
            <if test="alAmount != null and alAmount != ''">
                al_amount = #{alAmount},
            </if>
            <if test="useStatus != null and useStatus != ''">
                use_status = UPPER(#{useStatus}),
            </if>
            <if test="targetDept != null and targetDept != ''">
                target_dept = #{targetDept},
            </if>
            <if test="mpMemo != null and mpMemo != ''">
                mp_memo = #{mpMemo},
            </if>
            <if test="calcType != null and calcType != ''">
                calc_type = #{calcType},
            </if>
            <if test="taxType != null and taxType != ''">
                tax_type = #{taxType},
            </if>
        </set>
        WHERE mp_idx = #{mpIdx}
    </update>

    <delete id="delete" parameterType="String">
        DELETE
        FROM salary_mapping
        WHERE mp_idx = #{mpIdx}
    </delete>
    <!-- <select id="findAllByCoIdx" parameterType="String" resultType="SalaryMappingDTO">
        SELECT
            mp_idx,
            al_number,
            al_name,
            type,
            salary_type,
            al_amount,
            UPPER(use_status) AS use_status,
            target_dept,
            mp_memo
        FROM salary_mapping
        WHERE co_idx = #{coIdx}
        ORDER BY type, al_number
    </select> -->

    <!-- <select id="findByMpIdx" resultType="SalaryMappingDTO">
        SELECT
            mp_idx,
            al_number,
            salary_type,
            al_name,
            type,
            co_idx,
            al_amount,
            UPPER(use_status) AS use_status,
            target_dept,
            mp_memo
        FROM salary_mapping
        WHERE co_idx = #{coIdx} AND mp_idx = #{mpIdx}
    </select> -->

    <!-- <insert id="insert" parameterType="SalaryMappingDTO">
        <selectKey resultType="String" keyProperty="mpIdx" order="BEFORE">
        SELECT 'mp-' || TO_CHAR(NVL(MAX(TO_NUMBER(SUBSTR(mp_idx, 4))), 100) + 1) FROM salary_mapping
        </selectKey>
        INSERT INTO salary_mapping(mp_idx, al_number, salary_type, al_name, type, co_idx, al_amount, use_status, target_dept, mp_memo)
        VALUES(#{mpIdx}, #{alNumber}, #{salaryType}, #{alName}, #{type}, #{coIdx}, #{alAmount}, UPPER(#{useStatus}), #{targetDept}, #{mpMemo})
    </insert> -->

    <!-- <update id="update" parameterType="SalaryMappingDTO">
        UPDATE salary_mapping
        <set>
            <if test="alNumber != null and alNumber != ''">
            al_number    = #{alNumber},
            </if>
            <if test="salaryType != null and salaryType != ''">
            salary_type  = #{salaryType},
            </if>
            <if test="alName != null and alName != ''">
            al_name    = #{alName},
            </if>
            <if test="type != null and type != ''">
            type    = #{type},
            </if>
            <if test="alAmount != null and alAmount != ''">
            al_amount    = #{alAmount},
            </if>
            <if test="useStatus != null and useStatus != ''">
            use_status    = UPPER(#{useStatus}),
            </if>
            <if test="targetDept != null and targetDept != ''">
            target_dept    = #{targetDept},
            </if>
            <if test="mpMemo != null and mpMemo != ''">
            mp_memo    = #{mpMemo},
            </if>
        </set>
        WHERE mp_idx = #{mpIdx}
    </update> -->

    <!-- <delete id="delete" parameterType="String">
        DELETE FROM salary_mapping
        WHERE mp_idx = #{mpIdx}
    </delete> -->
</mapper>