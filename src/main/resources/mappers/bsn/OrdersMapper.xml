<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eflix.bsn.mapper.OrdersMapper">

  <select id="selectAllOrders" resultType="com.eflix.bsn.dto.OrdersDTO" parameterType="String">
  SELECT
        o.ORDER_NO          AS orderNo,
        o.ORDER_DT          AS orderDt,
        o.CUSTOMER_CD       AS customerCd,
        o.PAYMENT_TERMS     AS paymentTerms,
        o.ORDER_WRITER      AS orderWriter,
        /* ───────── 조인 컬럼 ───────── */
        c.CUSTOMER_NM       AS customerNm,
        c.REPRESENTATIVE_NM AS representativeNm,
        c.PHONE_NO          AS phoneNo,
        c.SALES_EMP_CD      AS salesEmpCd,
        c.DISCOUNT_RATE     AS discountRate
    FROM   ORDERS o
    JOIN   CUSTOMERS c
          ON c.CUSTOMER_CD = o.CUSTOMER_CD
          and  c.co_idx = #{coIdx}
    WHERE  o.co_idx = #{coIdx}
    ORDER  BY o.ORDER_DT DESC
  </select>

  <select id="selectOrderHeader" resultType="com.eflix.bsn.dto.OrdersDTO" parameterType = "OrdersDTO">
  SELECT
        o.ORDER_NO          AS orderNo,
        o.ORDER_DT          AS orderDt,
        o.CUSTOMER_CD       AS customerCd,
        o.PAYMENT_TERMS     AS paymentTerms,
        o.ORDER_WRITER      AS orderWriter,
        /* 조인 컬럼 */
        c.CUSTOMER_NM       AS customerNm,
        c.REPRESENTATIVE_NM AS representativeNm,
        c.PHONE_NO          AS phoneNo,
        c.SALES_EMP_CD      AS salesEmpCd,
        c.DISCOUNT_RATE     AS discountRate
    FROM   ORDERS o
    JOIN   CUSTOMERS c
          ON c.CUSTOMER_CD = o.CUSTOMER_CD
          AND c.CO_IDX = o.CO_IDX
    WHERE  o.ORDER_NO = #{orderNo}
    and o.co_idx = #{coIdx}
  </select>

  <select id="selectOrderDetails" resultType="com.eflix.bsn.dto.OrdersDetailDTO" parameterType="OrdersDetailDTO">
  SELECT
    od.ORDER_NO        AS orderNo,
    od.LINE_NO         AS lineNo,
    od.ITEM_CODE       AS itemCode,
    od.ITEM_NAME       AS itemName,
    od.SPEC            AS spec,
    od.QTY             AS qty,
    od.UNIT_PRICE      AS unitPrice,
    od.SUPPLY_AMOUNT   AS supplyAmount,
    od.TAX_AMOUNT      AS taxAmount,
    od.TOTAL_AMOUNT    AS totalAmount,
    od.REMARKS         AS remarks,
    od.CO_IDX          AS coIdx,
    od.OUTBOUND_DT     AS outboundDt,
    od.CATCH_DT        AS catchDt,
    od.OUT_STATE       AS outState
  FROM ORDERS_DETAIL od
  WHERE od.ORDER_NO = #{orderNo}
    AND od.CO_IDX = #{coIdx}
  ORDER BY od.LINE_NO
</select>

  <select id="selectNextOrderNo" resultType="string" parameterType = "String">
    SELECT FN_NEXT_ORDER_NO FROM DUAL
    WHERE  co_idx = #{coIdx}
  </select>


  <select id="findLatestOrderNoForToday" resultType="string">
      SELECT MAX(ORDER_NO)
      FROM ORDERS
      WHERE ORDER_NO LIKE #{prefix} || '%'
        AND CO_IDX = #{coIdx}
    </select>

  <insert id="insertOrder" parameterType="com.eflix.bsn.dto.OrdersDTO">
    INSERT INTO ORDERS (
      ORDER_NO, ORDER_DT, PAYMENT_TERMS,
      CUSTOMER_CD, CO_IDX, ORDER_WRITER, REMARKS 
    ) VALUES (
      #{orderNo}, #{orderDt}, #{paymentTerms},
      #{customerCd}, #{coIdx}, #{orderWriter}, #{remarks}
    )
  </insert>

  <update id="updateOrder" parameterType="com.eflix.bsn.dto.OrdersDTO">
    UPDATE EFLIX.ORDERS
      SET 
          ORDER_DT      = #{orderDt},
          PAYMENT_TERMS = #{paymentTerms},
          ORDER_WRITER  = #{orderWriter},
          REMARKS       = #{remarks},
          CUSTOMER_CD   = #{customerCd}
    WHERE ORDER_NO     = #{orderNo}
    AND CO_IDX         = #{coIdx}
  </update>

  <update id="updateOrderDetail" parameterType="com.eflix.bsn.dto.OrdersDetailDTO">
  UPDATE EFLIX.ORDERS_DETAIL
    SET ITEM_CODE     = #{itemCode},
        ITEM_NAME     = #{itemName},  
        SPEC          = #{spec},
        QTY           = #{qty},
        UNIT_PRICE    = #{unitPrice},
        SUPPLY_AMOUNT = #{supplyAmount},
        TAX_AMOUNT    = #{taxAmount},
        TOTAL_AMOUNT  = #{totalAmount},
        OUTBOUND_DT   = #{outboundDt,jdbcType=DATE},
        CATCH_DT      = #{catchDt,   jdbcType=DATE},
        OUT_STATE     = #{outState},
        REMARKS       = #{remarks}
    WHERE ORDER_NO     = #{orderNo}
    AND LINE_NO      = #{lineNo}
    AND CO_IDX       = #{coIdx}
</update>

  <delete id="deleteOrderDetailAll" parameterType="string">
      DELETE FROM ORDERS_DETAIL
      WHERE ORDER_NO = #{orderNo}
      and co_idx = #{coIdx}
  </delete>
  
  <delete id="deleteOrder" parameterType="string">
      DELETE FROM ORDERS
      WHERE ORDER_NO = #{orderNo}
      and co_idx = #{coIdx}
  </delete>

  <insert id="insertOrderDetailBatch">
    INSERT ALL
    <foreach collection="list" item="d">
      INTO ORDERS_DETAIL (
        ORDER_NO, LINE_NO, ITEM_CODE, ITEM_NAME, SPEC,
        QTY, UNIT_PRICE, SUPPLY_AMOUNT, TAX_AMOUNT, TOTAL_AMOUNT,
        REMARKS, CO_IDX, OUTBOUND_DT, CATCH_DT, OUT_STATE
      ) VALUES (
        #{d.orderNo}, #{d.lineNo}, #{d.itemCode}, #{d.itemName}, #{d.spec},
        #{d.qty}, #{d.unitPrice}, #{d.supplyAmount}, #{d.taxAmount}, #{d.totalAmount},
        #{d.remarks}, #{d.coIdx}, #{d.outboundDt}, #{d.catchDt}, #{d.outState}
      )
    </foreach>
    SELECT 1 FROM DUAL
  </insert>
</mapper>
