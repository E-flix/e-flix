<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eflix.bsn.mapper.CustomerMapper">

  <resultMap id="CustomerResult" type="com.eflix.bsn.dto.CustomerDTO">
    <result property="customerCd" column="CUSTOMER_CD"/>
    <result property="customerNm" column="CUSTOMER_NM"/>
    <result property="representativeNm" column="REPRESENTATIVE_NM"/>
    <result property="businessRegNo" column="BUSINESS_REG_NO"/>
    <result property="address" column="ADDRESS"/>
    <result property="phoneNo" column="PHONE_NO"/>
    <result property="email" column="EMAIL"/>
    <result property="salesEmpCd" column="SALES_EMP_CD"/>
    <result property="creditGrade" column="CREDIT_GRADE"/>
    <result property="useYn" column="USE_YN"/>
    <result property="regDt" column="REG_DT"/>
    <result property="updDt" column="UPD_DT"/>
    <result property="discountRate" column="DISCOUNT_RATE"/>
    <result property="coIdx" column="CO_IDX"/>
  </resultMap>

  <!-- 전체 조회 -->
  <select id="selectAll" resultMap="CustomerResult">
    SELECT
      CUSTOMER_CD,
      CUSTOMER_NM,
      REPRESENTATIVE_NM,
      PHONE_NO,
      SALES_EMP_CD, 
      DISCOUNT_RATE
    FROM CUSTOMERS
    WHERE USE_YN = 'Y'
  </select>

  <!-- 이름 검색 -->
  <select id="selectByName" parameterType="string" resultMap="CustomerResult">
    SELECT
      CUSTOMER_CD,
      CUSTOMER_NM,
      REPRESENTATIVE_NM,
      PHONE_NO,
      SALES_EMP_CD,
      DISCOUNT_RATE
    FROM CUSTOMERS
    WHERE USE_YN = 'Y'
      AND CUSTOMER_NM LIKE '%' || #{name} || '%'
  </select>

  <!-- 거래처 코드로 단건 조회  -->
  <select id="selectByCode" parameterType="string" resultMap="CustomerResult">
    SELECT
      CUSTOMER_CD,
      CUSTOMER_NM,
      SALES_EMP_CD,
      PHONE_NO,
      DISCOUNT_RATE
    FROM CUSTOMERS
    WHERE USE_YN = 'Y'
      AND CUSTOMER_CD = #{customerCd}
  </select>

  <!-- ═══ 주문서 등록용 거래처 상세 정보 조회  ═══ -->
  <select id="selectByCustomerCd" 
          parameterType="string" 
          resultType="com.eflix.bsn.dto.CustomerDTO">
    SELECT
        CUSTOMER_CD        AS customerCd,
        CUSTOMER_NM        AS customerNm,
        REPRESENTATIVE_NM  AS representativeNm,
        BUSINESS_REG_NO    AS businessRegNo,
        ADDRESS            AS address,
        PHONE_NO           AS phoneNo,
        EMAIL              AS email,
        SALES_EMP_CD       AS salesEmpCd,
        CREDIT_GRADE       AS creditGrade,
        USE_YN             AS useYn,
        REG_DT             AS regDt,
        UPD_DT             AS updDt,
        DISCOUNT_RATE      AS discountRate,
        CO_IDX             AS coIdx
    FROM CUSTOMERS
    WHERE CUSTOMER_CD = #{customerCd}
      AND USE_YN = 'Y'
  </select>

  <!-- ═══ 거래처 + 여신정보 JOIN 조회 ═══ -->
  <select id="selectCustomerWithCredit" 
          parameterType="string" 
          resultType="java.util.HashMap">
    SELECT
        /* 거래처 정보 */
        c.CUSTOMER_CD        AS customerCd,
        c.CUSTOMER_NM        AS customerNm,
        c.REPRESENTATIVE_NM  AS representativeNm,
        c.EMAIL              AS email,
        c.SALES_EMP_CD       AS salesEmpCd,
        c.DISCOUNT_RATE      AS discountRate,
        c.PHONE_NO           AS phoneNo,
        c.ADDRESS            AS address,
        
        /* 여신 정보 */
        cr.CREDIT_LIMIT      AS creditLimit,
        cr.CREDIT_USED       AS creditUsed,
        cr.CREDIT_STATUS     AS creditStatus,
        cr.CREDIT_HOLD_FLG   AS creditHoldFlg,
        cr.CREDIT_HOLD_REASON AS creditHoldReason,
        cr.TRADE_STOP_FLG    AS tradeStopFlg,
        cr.TRADE_STOP_REASON AS tradeStopReason,
        cr.PAYMENT_TERMS     AS paymentTerms,
        
        /* 계산 필드 */
        (cr.CREDIT_LIMIT - cr.CREDIT_USED) AS remainingCredit
        
    FROM CUSTOMERS c
    LEFT JOIN CREDIT_MANAGEMENT cr ON c.CUSTOMER_CD = cr.CUSTOMER_CD
    WHERE c.CUSTOMER_CD = #{customerCd}
      AND c.USE_YN = 'Y'
  </select>

  <!-- ═══ 거래처 검색 (자동완성용) ═══ -->
  <select id="searchCustomers" 
          parameterType="string" 
          resultMap="CustomerResult">
    SELECT
        CUSTOMER_CD,
        CUSTOMER_NM,
        REPRESENTATIVE_NM,
        PHONE_NO,
        DISCOUNT_RATE
    FROM CUSTOMERS
    WHERE USE_YN = 'Y'
      AND (
          CUSTOMER_CD LIKE '%' || #{keyword} || '%'
          OR CUSTOMER_NM LIKE '%' || #{keyword} || '%'
          OR REPRESENTATIVE_NM LIKE '%' || #{keyword} || '%'
      )
    ORDER BY CUSTOMER_NM
    FETCH FIRST 10 ROWS ONLY
  </select>

  <select id="searchByName"
          resultType="com.eflix.bsn.dto.CustomerDTO"
          parameterType="string">
    SELECT
      CUSTOMER_CD     AS customerCd,
      CUSTOMER_NM     AS customerNm,
      REPRESENTATIVE_NM AS representativeNm,
      PHONE_NO        AS phoneNo,
      SALES_EMP_CD    AS salesEmpCd,
      DISCOUNT_RATE   AS discountRate
    FROM EFLIX.CUSTOMERS
    <where>
      <if test="name != null and name != ''">
        CUSTOMER_NM LIKE '%' || #{name} || '%'
      </if>
    </where>
    ORDER BY CUSTOMER_NM
  </select>


<!-- [수정] 전체 거래처 목록 조회 시 할인율(DISCOUNT_RATE) 추가 -->
<select id="selectAllWithCreditSummary" resultType="java.util.Map">
  SELECT
      c.CUSTOMER_CD       AS "customerCd",
      c.CUSTOMER_NM       AS "customerNm",
      c.REPRESENTATIVE_NM AS "representativeNm",
      c.PHONE_NO          AS "phoneNo",
      c.DISCOUNT_RATE     AS "discountRate",
      cr.CREDIT_STATUS    AS "creditStatus",
      cr.TRADE_STOP_FLG   AS "tradeStopFlg",
      cr.CREDIT_HOLD_FLG  AS "creditHoldFlg"
  FROM CUSTOMERS c
  LEFT JOIN CREDIT_MANAGEMENT cr ON c.CUSTOMER_CD = cr.CUSTOMER_CD AND c.CO_IDX = cr.CO_IDX
  WHERE c.CO_IDX = #{coIdx} AND c.USE_YN = 'Y'
  ORDER BY c.CUSTOMER_NM
</select>

<select id="findMaxCustomerSequence" resultType="int">
  SELECT NVL(MAX(TO_NUMBER(SUBSTR(CUSTOMER_CD, 4))), 0)
  FROM CUSTOMERS
  WHERE CUSTOMER_CD LIKE #{prefix} || '%'
    AND REGEXP_LIKE(SUBSTR(CUSTOMER_CD, 4), '^[0-9]+$')
</select>

<!-- [수정] 신규 거래처 저장 시 할인율(DISCOUNT_RATE) 추가 -->
<insert id="insertCustomer" parameterType="com.eflix.bsn.dto.CustomerDTO">
  INSERT INTO CUSTOMERS (
      CUSTOMER_CD, CUSTOMER_NM, REPRESENTATIVE_NM, BUSINESS_REG_NO, ADDRESS,
      PHONE_NO, EMAIL, SALES_EMP_CD, CREDIT_GRADE, USE_YN, 
      REG_DT, UPD_DT, CO_IDX, DISCOUNT_RATE
  ) VALUES (
      #{customerCd}, #{customerNm}, #{representativeNm}, #{businessRegNo}, #{address},
      #{phoneNo}, #{email}, #{salesEmpCd}, #{creditGrade}, 'Y', 
      SYSDATE, SYSDATE, #{coIdx}, #{discountRate, jdbcType=NUMERIC}
  )
</insert>

<!-- [수정] 거래처 정보 수정 시 할인율(DISCOUNT_RATE) 추가 -->
<update id="updateCustomer" parameterType="com.eflix.bsn.dto.CustomerDTO">
  UPDATE CUSTOMERS
  <set>
      <if test="customerNm != null and customerNm != ''">CUSTOMER_NM = #{customerNm},</if>
      <if test="representativeNm != null and representativeNm != ''">REPRESENTATIVE_NM = #{representativeNm},</if>
      <if test="businessRegNo != null and businessRegNo != ''">BUSINESS_REG_NO = #{businessRegNo},</if>
      <if test="address != null and address != ''">ADDRESS = #{address},</if>
      <if test="phoneNo != null and phoneNo != ''">PHONE_NO = #{phoneNo},</if>
      <if test="email != null and email != ''">EMAIL = #{email},</if>
      <if test="salesEmpCd != null and salesEmpCd != ''">SALES_EMP_CD = #{salesEmpCd},</if>
      <if test="creditGrade != null and creditGrade != ''">CREDIT_GRADE = #{creditGrade},</if>
      <if test="useYn != null and useYn != ''">USE_YN = #{useYn},</if>
      <if test="discountRate != null">DISCOUNT_RATE = #{discountRate},</if>
      UPD_DT = SYSDATE
  </set>
  WHERE CUSTOMER_CD = #{customerCd} AND CO_IDX = #{coIdx}
</update>

  <update id="softDeleteCustomer">
        UPDATE CUSTOMERS
        SET USE_YN = 'N',
            UPD_DT = SYSDATE
        WHERE CUSTOMER_CD = #{customerCd} AND CO_IDX = #{coIdx}
  </update>

</mapper>
