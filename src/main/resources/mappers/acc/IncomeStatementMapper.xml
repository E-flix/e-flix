<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- ============================================
  - 작성자   : 김희정
  - 최초작성 : 2025-07-05
  - 설명     : IncomeStatementMapper query xml
  [ 변경 이력 ]
  - 2025-07-05 (김희정): IncomeStatementMapper 생성
=============================================== -->
<mapper namespace="com.eflix.acc.mapper.IncomeStatementMapper">
	<select id="getIncomeStatementByYear" parameterType="map" resultType="com.eflix.acc.dto.IncomeStatementDTO">
    SELECT
      a.standard_account_name,
      a.major_category,
      a.middle_category,
      a.minor_category,
      SUM(
        CASE 
          WHEN a.major_category = '비용' AND e.resentmen_type = 'g3' THEN e.amount
          WHEN a.major_category = '비용' AND e.resentmen_type = 'g4' THEN -e.amount
          WHEN a.major_category = '수익' AND e.resentmen_type = 'g3' THEN -e.amount
          WHEN a.major_category = '수익' AND e.resentmen_type = 'g4' THEN e.amount
          ELSE 0
        END
      ) AS sum_amount
    FROM account a
    JOIN entry_detail e
      ON a.account_code = e.account_code
    JOIN entry_master m
      ON e.entry_number = m.entry_number
    WHERE TO_CHAR(m.entry_date, 'YYYY') = #{year}
      AND TO_NUMBER(TO_CHAR(m.entry_date, 'MM')) <![CDATA[<=]]> #{endMonth}
      AND a.co_idx = #{coIdx}
      AND e.co_idx = #{coIdx}
      AND m.co_idx = #{coIdx}
    GROUP BY a.standard_account_name, a.major_category, a.middle_category, a.minor_category
	</select>
	
	<!-- 상품 기말재고액 조회 (상품 기말재고액 계산: 기초재고 + 당기 차변합계 - 당기 대변합계) -->
    <select id="getGoodsEndingInventory" parameterType="map" resultType="long">
      WITH
      base_inventory AS (
        SELECT NVL(SUM(
          CASE 
            WHEN e.resentmen_type = 'g3' THEN e.amount
            WHEN e.resentmen_type = 'g4' THEN -e.amount
            ELSE 0
          END
        ), 0) AS base
        FROM account a
        JOIN entry_detail e ON a.account_code = e.account_code
        JOIN entry_master m ON e.entry_number = m.entry_number
        WHERE m.entry_date <![CDATA[<]]> TO_DATE(#{year} || '-01-01', 'YYYY-MM-DD')
          AND a.co_idx = #{coIdx}
          AND e.co_idx = #{coIdx}
          AND m.co_idx = #{coIdx}
          AND a.major_category = '자산'
          AND a.standard_account_name = '상품'
      ),
      current_debit AS (
        SELECT NVL(SUM(e.amount), 0) AS debit
        FROM account a
        JOIN entry_detail e ON a.account_code = e.account_code
        JOIN entry_master m ON e.entry_number = m.entry_number
        WHERE TO_CHAR(m.entry_date, 'YYYY') = #{year}
          AND TO_NUMBER(TO_CHAR(m.entry_date, 'MM')) <![CDATA[<=]]> #{endMonth}
          AND e.resentmen_type = 'g3'
          AND a.co_idx = #{coIdx}
          AND e.co_idx = #{coIdx}
          AND m.co_idx = #{coIdx}
          AND a.major_category = '자산'
          AND a.standard_account_name = '상품'
      ),
      current_credit AS (
        SELECT NVL(SUM(e.amount), 0) AS credit
        FROM account a
        JOIN entry_detail e ON a.account_code = e.account_code
        JOIN entry_master m ON e.entry_number = m.entry_number
        WHERE TO_CHAR(m.entry_date, 'YYYY') = #{year}
          AND TO_NUMBER(TO_CHAR(m.entry_date, 'MM')) <![CDATA[<=]]> #{endMonth}
          AND e.resentmen_type = 'g4'
          AND a.co_idx = #{coIdx}
          AND e.co_idx = #{coIdx}
          AND m.co_idx = #{coIdx}
          AND a.major_category = '자산'
          AND a.standard_account_name = '상품'
      )
      SELECT (bi.base + d.debit - c.credit) AS endingInventory
      FROM base_inventory bi, current_debit d, current_credit c
    </select>
    
    <!-- 상품 당기매입액 = 상품매출원가 + 기말재고 - 기초재고 -->
    <select id="getGoodsPurchaseAmount" parameterType="map" resultType="long">
      WITH
      beginning_inventory AS (
        SELECT NVL(SUM(
          CASE WHEN e.resentmen_type = 'g3' THEN e.amount
              WHEN e.resentmen_type = 'g4' THEN -e.amount
              ELSE 0
          END
        ), 0) AS base
        FROM account a
        JOIN entry_detail e ON a.account_code = e.account_code
        JOIN entry_master m ON e.entry_number = m.entry_number
        WHERE m.entry_date <![CDATA[<]]> TO_DATE(#{year} || '-01-01', 'YYYY-MM-DD')
          AND a.co_idx = #{coIdx}
          AND e.co_idx = #{coIdx}
          AND m.co_idx = #{coIdx}
          AND a.major_category = '자산'
          AND a.standard_account_name = '상품'
      ),
      ending_inventory AS (
        SELECT NVL(SUM(
          CASE WHEN e.resentmen_type = 'g3' THEN e.amount
              WHEN e.resentmen_type = 'g4' THEN -e.amount
              ELSE 0
          END
        ), 0) AS inventory
        FROM account a
        JOIN entry_detail e ON a.account_code = e.account_code
        JOIN entry_master m ON e.entry_number = m.entry_number
        WHERE TO_CHAR(m.entry_date, 'YYYY') = #{year}
          AND TO_NUMBER(TO_CHAR(m.entry_date, 'MM')) <![CDATA[<=]]> #{endMonth}
          AND a.co_idx = #{coIdx}
          AND e.co_idx = #{coIdx}
          AND m.co_idx = #{coIdx}
          AND a.major_category = '자산'
          AND a.standard_account_name = '상품'
      ),
      cogs AS (
        SELECT NVL(SUM(e2.amount), 0) as cogsAmount
        FROM entry_detail e1
        JOIN entry_detail e2 ON e1.entry_number = e2.entry_number
        JOIN entry_master m ON e1.entry_number = m.entry_number
        JOIN account a1 ON e1.account_code = a1.account_code
        JOIN account a2 ON e2.account_code = a2.account_code
        WHERE TO_CHAR(m.entry_date, 'YYYY') = #{year}
          AND TO_NUMBER(TO_CHAR(m.entry_date, 'MM')) <![CDATA[<=]]> #{endMonth}
          AND e1.resentmen_type = 'g3'
          AND e2.resentmen_type = 'g4'
          AND a1.standard_account_name LIKE '%상품매출원가%'
          AND a2.standard_account_name = '상품'
          AND a2.major_category = '자산'
          AND a1.co_idx = #{coIdx}
          AND a2.co_idx = #{coIdx}
          AND e1.co_idx = #{coIdx}
          AND e2.co_idx = #{coIdx}
          AND m.co_idx = #{coIdx}
      )
      SELECT c.cogsAmount + ei.inventory - bi.base AS purchaseAmount
      FROM beginning_inventory bi, ending_inventory ei, cogs c
    </select>
    
    <!-- 상품 기초재고액 조회 (전년도 상품계정 잔액) -->
    <select id="getGoodsBeginningInventory" parameterType="map" resultType="long">
      SELECT NVL(SUM(
        CASE WHEN e.resentmen_type = 'g3' THEN e.amount
          WHEN e.resentmen_type = 'g4' THEN -e.amount
          ELSE 0
        END
      ), 0) AS base
      FROM account a
      JOIN entry_detail e ON a.account_code = e.account_code
      JOIN entry_master m ON e.entry_number = m.entry_number
      WHERE m.entry_date <![CDATA[<]]> TO_DATE(#{year} || '-01-01', 'YYYY-MM-DD')
        AND a.co_idx = #{coIdx}
        AND e.co_idx = #{coIdx}
        AND m.co_idx = #{coIdx}
        AND a.major_category = '자산'
        AND a.standard_account_name = '상품'
    </select>
    
    <!-- 상품 타계정대체액 조회 (상품에서 다른 계정으로 대체된 금액) -->
    <select id="getGoodsTransferAmount" parameterType="map" resultType="long">
      SELECT NVL(SUM(
        CASE 
          WHEN e.resentmen_type = 'g4' THEN e.amount
          ELSE 0
        END
      ), 0) as transferAmount
      FROM account a
      JOIN entry_detail e ON a.account_code = e.account_code
      JOIN entry_master m ON e.entry_number = m.entry_number
      WHERE TO_CHAR(m.entry_date, 'YYYY') = #{year}
        AND TO_NUMBER(TO_CHAR(m.entry_date, 'MM')) <![CDATA[<=]]> #{endMonth}
        AND a.co_idx = #{coIdx}
        AND e.co_idx = #{coIdx}
        AND m.co_idx = #{coIdx}
        AND a.major_category = '자산'
        AND a.standard_account_name = '상품'
        <!-- 상품매출원가 관련 분개는 제외 -->
        AND NOT EXISTS (
          SELECT 1 
          FROM entry_detail e2
          JOIN account a2 ON e2.account_code = a2.account_code
          WHERE e2.entry_number = e.entry_number
            AND e2.resentmen_type = 'g3'
            AND (
              a2.standard_account_name LIKE '%상품매출원가%' OR
              a2.standard_account_name LIKE '%매출원가%'
            )
        )
    </select>
</mapper>
